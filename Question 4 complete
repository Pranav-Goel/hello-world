class Interpolate:
    
    def solve(slf,L,M,mthd):
        if(mthd=="newton"):
            return (slf.Newton(L,M))
        else:
            return (slf.Lagrange(L,M))

    def Lagrange(slf,L,M):                                                
       
        
        from numpy import array
        from numpy.polynomial import polynomial as P
        n=len(L)                                                           
        w=(-1*L[0],1)                                                      
        for f in range(1,n):
            w=P.polymul(w,(-1*L[f],1))                                    
        result=array([0.0 for f in range(len(w)-1)])                    
        derivative=P.polyder(w)                                             
        for f in range(n):
            result+=(P.polydiv(w,(-1*L[f],1))[0]*M[f])/P.polyval(L[f],derivative)   
        return(list(result))                                                
    def Newton(slf,L,M):                                                   
       
        
        from numpy import array
        from numpy.polynomial import polynomial as P
        n=len(L)                                                            
        mat=[[0.0 for f in range(n)] for j in range(n)]                    
        for f in range(n):                                                 
            mat[f][0]=M[f]
        for f in range(1,n):                                               
            for j in range(n-f):
                mat[j][f]=(mat[j+1][f-1]-mat[j][f-1])/(L[j+f]-L[j])
        result=array((mat[0][0],))                                          
        for i in range(1,n):
            prod=(-1*L[0],1)                                               
                                                                            
            for j in range(1,f):
                prod=P.polymul(prod,(-1*L[j],1))                              
            result=P.polyadd(result,array(prod)*mat[0][f])                  
        return (list(result))                                               

apx=Interpolate()                                                          
for mthd in ["newton","lagrange"]:
    solution=apx.solve([1,2,3],[0,-1,0],mthd)
    print(solution)
